spring.application.name=vetrineCapstone


# Include external configurations from env.properties
spring.config.import=file:./src/main/resources/env.properties

# Server Configuration
server.port=${SERVER_PORT}

# Database Configuration
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=${PG_URL}
spring.datasource.url=${DATABASE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.username=${PG_USERNAME}
#spring.datasource.password=${PG_PASSWORD}

# JPA/Hibernate Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# Cloudinary Configuration
cloudinary.name=${CLOUDINARY_NAME}
cloudinary.key=${CLOUDINARY_KEY}
cloudinary.secret=${CLOUDINARY_SECRET}

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Segreto per JWT
jwt.secret=${JWT_SECRET}


sendgrid.apikey=${sendgrid.apikey}
sendgrid.fromemail=${sendgrid.fromemail}

# Percorso della directory di upload dei file
file.upload-dir=uploads/

# Configurazione delle risorse statiche
spring.resources.static-locations=file:./uploads/


#dimesione upload immagini:
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

# keys stripe:
stripe.api.key=${stripe.api.key}
stripe.api.publishable.key=pk_live_51PGRC8EEPe7qppias0V6rJQNngJ6OE24ovrGOxmRt723kBKPH2NFvUYlOIvIEnkC0dSHBwbPz7FTiJBT5Cc8nBUW00mwlajsIq

#hcaptcha:
hcaptcha.secret=${HCAPTCHA_SECRET}

#reset password
#frontend.reset-password-url=http://heroku/reset-password
frontend.reset-password-url=http://localhost:5173/reset-password



